NDSummary.OnToolTipsLoaded("File:UnforgivingDevicesMain.psc",{185:"<div class=\"NDToolTip TFile LPapyrus\"><div id=\"NDPrototype185\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Scriptname UnforgivingDevicesMain <span class=\"SHKeyword\">extends</span> Quest conditional</div></div><div class=\"TTSummary\">This is main script of Unforgiving Devices, which contains most important functions and propertiest filled with references to other scripts</div></div>",187:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype187\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">zadlibs property libs auto</div></div></div>",188:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype188\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">zadlibs_UDPatch property libsp hidden</div></div><div class=\"TTSummary\">Patched version of libs. Should be used for calling DD functions, instead of libs</div></div>",189:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype189\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">zadxlibs property libsx auto</div></div></div>",190:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype190\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">zadxlibs2 property libsx2 auto</div></div></div>",191:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype191\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">zadclibs property libsc auto</div></div></div>",192:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype192\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_libs Property UDlibs auto</div></div><div class=\"TTSummary\">This module contains many mod related properties, like abadon devices, utility items (lockpick, gold..), etc...</div></div>",193:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype193\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UDCustomDeviceMain Property UDCDmain auto</div></div><div class=\"TTSummary\">This module contains funtions for manipulating devices. See UDCustomDeviceMain</div></div>",194:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype194\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_AbadonQuest_script Property UDAbadonQuest auto</div></div><div class=\"TTSummary\">Abadon quest script</div></div>",195:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype195\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_MCM_script Property config Auto</div></div><div class=\"TTSummary\">MCM setting</div></div>",196:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype196\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UDItemManager Property ItemManager auto</div></div><div class=\"TTSummary\">This module contains functionality for equipping abadon sets</div></div>",197:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype197\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_RandomRestraintManager Property UDRRM auto</div></div><div class=\"TTSummary\">Meaning: Random Restrain Manager</div></div>",198:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype198\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_LeveledList_Patcher Property UDLLP auto</div></div><div class=\"TTSummary\">Meaning: Leveled List Patcher</div></div>",199:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype199\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_CustomDevices_NPCSlotsManager Property UDNPCM auto</div></div><div class=\"TTSummary\">Meaning: NPC Manager</div></div>",200:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype200\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_ModifierManager_Script Property UDMOM auto</div></div><div class=\"TTSummary\">Meaning: Modifier Manager</div></div>",201:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype201\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_UserInputScript Property UDUI auto</div></div><div class=\"TTSummary\">Meaning: User Input</div></div>",202:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype202\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_AnimationManagerScript Property UDAM auto</div></div><div class=\"TTSummary\">Meaning: Animation Manager</div></div>",203:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype203\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_NPCInteligence Property UDAI auto</div></div><div class=\"TTSummary\">Meaning: Artifical inteligence</div></div>",204:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype204\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_UIEManager Property UDUIE auto</div></div><div class=\"TTSummary\">Meaning: UI Extensions</div></div>",205:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype205\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_MenuChecker Property UDMC Hidden</div></div><div class=\"TTSummary\">Meaning: Menu checker</div></div>",206:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype206\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_WidgetControl Property UDWC Auto</div></div><div class=\"TTSummary\">Meaning: Widget Control</div></div>",207:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype207\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_GlobalVariables Property UDGV Hidden</div></div><div class=\"TTSummary\">Meaning: Global Variable</div></div>",208:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype208\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_SkillManager_Script Property UDSKILL Hidden</div></div><div class=\"TTSummary\">This module contains functions gettings actors UD skills</div></div>",209:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype209\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_OrgasmManager Property UDOMNPC auto</div></div><div class=\"TTSummary\">Meaning: NPC Orgasm Manager</div></div>",210:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype210\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_OrgasmManager Property UDOMPlayer auto</div></div><div class=\"TTSummary\">Meaning: Player Orgasm Manager</div></div>",211:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype211\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UD_Config Property UDCONF auto</div></div><div class=\"TTSummary\">Meaning: Mod Configuration</div></div>",212:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype212\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">UD_OrgasmManager Function GetUDOM(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",213:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype213\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function UseiWW()</div></div><div class=\"TTSummary\">Returns true if iWantWidgets is installed and enabled in MCM</div></div>",214:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype214\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Property UD_UseNativeFunctions = False auto hidden</div></div><div class=\"TTSummary\">If true, SKSE plugin native functions will be used</div></div>",215:"<div class=\"NDToolTip TVariable LPapyrus\"><div id=\"NDPrototype215\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">float</span> Property UD_baseUpdateTime hidden</div></div><div class=\"TTSummary\">Returns current update time of minigames</div></div>",217:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype217\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> Function UDReady()</div></div><div class=\"TTSummary\">Returns true if mod is fully ready (not installing or updating)</div></div>",218:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype218\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function WaitForReady()</div></div><div class=\"TTSummary\">This function will block thread until the mod is ready</div></div>",219:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype219\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">UnforgivingDevicesMain Function GetUDMain() Global</div></div><div class=\"TTSummary\">Returns singleton of UnforgivingDevicesMain script from main mod</div></div>",220:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype220\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function CheckSubModules()</div></div><div class=\"TTSummary\">This function will check all submodul scripts and returns if true if they are all ready</div></div>",221:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype221\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsUpdating()</div></div><div class=\"TTSummary\">True if mod is currently updating. Mods should be threated as disabled when this happends</div></div>",222:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype222\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsEnabled()</div></div><div class=\"TTSummary\">True if mod is not updating, not disabled and is ready</div></div>",223:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype223\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function PrintModStatus()</div></div><div class=\"TTSummary\">Print information about mod status in console</div></div>",224:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype224\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function DISABLE()</div></div><div class=\"TTSummary\">Disables mod, preventing any periodicall updates and interactions</div></div>",225:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype225\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function ENABLE()</div></div><div class=\"TTSummary\">Reenable mod from disabled state. See DISABLE</div></div>",226:"<div class=\"NDToolTip TFunction LPapyrus\"><div class=\"TTSummary\">Checks if user have correct version of SKSE installed, and UDNative.dll present</div></div>",227:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype227\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsSpecialEdition() global</div></div><div class=\"TTSummary\">true if correct skyrim version is Special Edition (also AE and VR)</div></div>",228:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype228\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function ForceUpdate()</div></div><div class=\"TTSummary\">Forces mod to update. Function is not blocking.</div></div>",229:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype229\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> Function getDDescapeDifficulty()</div></div></div>",230:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype230\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool function</span> hasAnyUD()</div></div><div class=\"TTSummary\">True if player have any Devious Device locked on</div></div>",231:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype231\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function Log(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName\">asMsg,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">aiLevel</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of text to Papyrus log</div></div>",232:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype232\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function CLog(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asMsg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of text to console. User first needs to have ConsoleUtil installed!</div></div>",233:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype233\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function Print(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName\">asMsg,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">aiLevel</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">abLog</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of text to skyrim text output (left upper corner)</div></div>",234:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype234\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function Error(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asMsg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of error message to console and Papyrus log</div></div>",235:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype235\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function Warning(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asMsg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of warning message to console and Papyrus log</div></div>",236:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype236\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function Info(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asMsg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prints one line of info message to console and Papyrus log</div></div>",237:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype237\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> Function TraceAllowed()</div></div><div class=\"TTSummary\">Allways use this function first beffore calling Log function!</div></div>",238:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype238\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function WaitRandomTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">afMin</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0.1</span>,</td></tr><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">afMax</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1.0</span></td></tr></table></td><td class=\"PAfterParameters\">) Global</td></tr></table></div></div><div class=\"TTSummary\">Block thread for random time. Thread will also not continue unless menus are closed</div></div>",239:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype239\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function WaitMenuRandomTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">afMin</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0.1</span>,</td></tr><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">afMax</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1.0</span></td></tr></table></td><td class=\"PAfterParameters\">) Global</td></tr></table></div></div><div class=\"TTSummary\">Same as WaitRandomTime, but will also work if menus are open</div></div>",240:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype240\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Function CalcDistance(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ObjectReference&nbsp;</td><td class=\"PName last\">akObj1,</td></tr><tr><td class=\"PType first\">ObjectReference&nbsp;</td><td class=\"PName last\">akObj2</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Calculate distance between two objects</div></div>",241:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype241\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> Function getPlugsVibrationStrengthString(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiStrenght</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Returns string with vibrator strength</div></div>",243:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype243\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> Function IntToBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">argInt</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">This function is internaly only used for debugging</div></div>",244:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype244\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> Function codeBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiCodedMap,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiSize,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiIndex</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",245:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype245\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> Function decodeBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiCodedMap,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiSize,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiIndex</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",246:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype246\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Function fRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afMin,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afMax</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Truncate passed FLOAT value between two limits</div></div>",247:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype247\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> Function iRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiMin,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiMax</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Truncate passed INT value between two limits</div></div>",248:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype248\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Bool Function iInRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiMin,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiMax</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Checks if passed value is in range</div></div>",249:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype249\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Bool Function fInRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afMin,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afMax</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Checks if passed value is in range</div></div>",250:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype250\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> Function formatString(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">asValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">afFloatPoints</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Formats float stored in string, so it can show only passed number of floating points</div></div>",251:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype251\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Function checkLimit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afLimit</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Truncate passed value only in positive direction</div></div>",252:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype252\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> Function Round(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afValue</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Round the FLOAT number to INT</div></div>",253:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype253\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Int Function iUnsig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Int&nbsp;</td><td class=\"PName last\">aiValue</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Truncate negative values from passed INT</div></div>",254:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype254\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function fUnsig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">afValue</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Truncate negative values from passed FLOAT</div></div>",255:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype255\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function ConvertTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">akHours,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">akMinutes</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0.0</span>,</td></tr><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName\">akSeconds</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0.0</span></td></tr></table></td><td class=\"PAfterParameters\">) Global</td></tr></table></div></div><div class=\"TTSummary\">Convert passed time to days</div></div>",256:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype256\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function ConvertTimeHours(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName last\">akHours</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Convert passed hours to days</div></div>",257:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype257\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function ConvertTimeMinutes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName last\">akMinutes</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Convert passed minutes to days</div></div>",258:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype258\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function ConvertTimeSeconds(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName last\">akSeconds</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Convert passed seconds to days</div></div>",259:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype259\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Int Function iAbs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Int&nbsp;</td><td class=\"PName last\">aiVal</td></tr></table></td><td class=\"PAfterParameters\">) Global</td></tr></table></div></div><div class=\"TTSummary\">Calculate absolute value of passed INT</div></div>",260:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype260\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Float Function fAbs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Float&nbsp;</td><td class=\"PName last\">afVal</td></tr></table></td><td class=\"PAfterParameters\">) Global</td></tr></table></div></div><div class=\"TTSummary\">Same as iAbs, but for FLOAT</div></div>",262:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype262\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ModInstalled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">asModFileName</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Check if mod is installed</div></div>",263:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype263\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ModInstalledAfterUD(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">asModFileName</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Check if mod is installed after Unforgiving Devices</div></div>",264:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype264\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> Function MakeDeviceHeader(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor,</td></tr><tr><td class=\"PType first\">Armor&nbsp;</td><td class=\"PName last\">akInvDevice</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Creates string containing formated information about device worn by actor</div></div>",265:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype265\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Form Function GetMeMyForm(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">aiFormNumber,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">asPluginName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Bool&nbsp;</td><td class=\"PName\">abErrorMsg</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">True</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Returns form from plugin. Also works for esl plugins</div></div>",267:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype267\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">string</span> Function GetUserTextInput()</div></div><div class=\"TTSummary\">Opens text input menu, and returns its result</div></div>",268:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype268\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Int Function GetUserListInput(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">arrList</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Opens list menu and returns index of selected line. Top is 0, bottom is max index</div></div>",270:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype270\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function ShowMessageBox(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">asText</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Shows message box with passed string. This function should be only used for showing multiline strings.</div></div>",271:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype271\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Function ShowSingleMessageBox(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asMessage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Shows message box with passed string.</div></div>",273:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype273\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Function getMaxActorValue(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName\">akActor,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">akValue,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName\">afPerc</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1.0</span></td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Returns maximum value of AV from passed actor</div></div>",274:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype274\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Function getCurrentActorValuePerc(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">akValue</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",275:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype275\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorIsPlayer(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",276:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype276\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function GActorIsPlayer(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div><div class=\"TTSummary\">Global version of ActorIsPlayer. This function is generaly slower, and its non-global variant should be used instead.</div></div>",277:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype277\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> Function GetActorName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",278:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype278\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorIsFollower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",279:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype279\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorIsValidForUD(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This function check if passed actor is valid for Unforgiving Devices (wearing devices, orgasm system, etc...).</div></div>",280:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype280\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorInCloseRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This function check if passed actor is close to Player</div></div>",281:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype281\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorFreeHands(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName\">akActor,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">abCheckGrasp</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Check if actor have free hands</div></div>",282:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype282\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Bool Function ActorIsHelpless(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Check if actor is helpless and cant resist player actions</div></div>",283:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype283\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Int Function GetActorGender(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",284:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype284\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> Function ActorIsFemale(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",285:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype285\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">String Function GetPronounceSelf(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName\">akActor,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Bool&nbsp;</td><td class=\"PName\">abCapital</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",286:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype286\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">String Function GetPronounce(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName\">akActor,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Bool&nbsp;</td><td class=\"PName\">abCapital</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False</td></tr></table></td><td class=\"PAfterParameters\">) global</td></tr></table></div></div></div>",287:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype287\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Bool Function ActorHaveSoS(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Actor&nbsp;</td><td class=\"PName last\">akActor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",289:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype289\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function closeMenu() global</div></div><div class=\"TTSummary\">Closes all following menus</div></div>",290:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype290\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Function closeLockpickMenu() global</div></div><div class=\"TTSummary\">Closes lockpick menu</div></div>",291:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype291\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsMenuOpen()</div></div><div class=\"TTSummary\">This function check if any menu is open. It is much faster then its UI couterpart</div></div>",292:"<div class=\"NDToolTip TFunction LPapyrus\"><div class=\"TTSummary\">This function check if any menu is open. Ignores all checks.</div></div>",293:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype293\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Bool Function IsMenuOpenID(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">aiID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This function check if specific menu is open</div></div>",294:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype294\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsContainerMenuOpen()</div></div><div class=\"TTSummary\">True if <b>Container</b> menu is open</div></div>",295:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype295\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsLockpickingMenuOpen()</div></div><div class=\"TTSummary\">True if <b>Lockpicking</b> menu is open</div></div>",296:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype296\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsInventoryMenuOpen()</div></div><div class=\"TTSummary\">True if <b>Inventory</b> menu is open</div></div>",297:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype297\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Bool Function IsMessageboxOpen()</div></div><div class=\"TTSummary\">True if <b>Messagebox</b> menu is open</div></div>",299:"<div class=\"NDToolTip TFunction LPapyrus\"><div id=\"NDPrototype299\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">UD_StaticNPCSlots Function GetStaticSlots(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">String&nbsp;</td><td class=\"PName last\">asName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>"});